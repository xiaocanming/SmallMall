<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>smallmall-admin</artifactId>
    <groupId>com.xcm.smallmall</groupId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>smallmall-admin</name>
    <description>smallmall-admin project for smallmall</description>

    <parent>
        <artifactId>smallmall</artifactId>
        <groupId>com.xcm.smallmall</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <dependencies>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>com.xcm.smallmall</groupId>
            <artifactId>smallmall-mbg</artifactId>
        </dependency>
        <dependency>
            <groupId>com.xcm.smallmall</groupId>
            <artifactId>smallmall-common</artifactId>
        </dependency>
        <dependency>
            <groupId>com.xcm.smallmall</groupId>
            <artifactId>smallmall-security</artifactId>
        </dependency>
    </dependencies>


    <build>
        <plugins>
            <!--能够将Spring Boot应用打包为可执行的jar或war文件，然后以通常的方式运行Spring Boot应用。-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <executable>true</executable>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.33.0</version>
                <configuration>
                    <!-- Docker 远程管理地址-->
                    <dockerHost>http://47.99.113.23:2375</dockerHost>
                    <!-- Docker 推送镜像仓库地址-->
                    <pushRegistry>http://47.99.113.23:5000</pushRegistry>
                    <images>
                        <image>
                            <!--由于推送到私有镜像仓库，镜像名需要添加仓库地址-->
                            <name>47.99.113.23:5000/smallmall/${project.name}:${project.version}</name>
                            <!--定义镜像构建行为-->
                            <build>
                                <!--定义基础镜像-->
                                <from>java:8</from>
                                <args>
                                    <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                                </args>
                                <!--定义哪些文件拷贝到容器中-->
                                <assembly>
                                    <!--定义拷贝到容器的目录-->
                                    <targetDir>/</targetDir>
                                    <!--只拷贝生成的jar包-->
                                    <descriptorRef>artifact</descriptorRef>
                                </assembly>
                                <!--定义容器启动命令-->
                                <entryPoint>["java", "-jar","/${project.build.finalName}.jar"]</entryPoint>
                                <!--定义维护者-->
                                <maintainer>xcm</maintainer>
                            </build>
                            <!--定义容器启动行为-->
                            <run>
                                <!--设置容器名，可采用通配符-->
                                <containerNamePattern>${project.artifactId}</containerNamePattern>
                                <!--设置端口映射-->
                                <ports>
                                    <port>8082:8082</port>
                                </ports>
                                <!--&lt;!&ndash;设置容器间连接&ndash;&gt;-->
                                <!--<links>-->
                                    <!--<link>mysql:db</link>-->
                                <!--</links>-->
                                <!--设置容器和宿主机目录挂载-->
                                <volumes>
                                    <bind>
                                        <volume>/etc/localtime:/etc/localtime</volume>
                                        <volume>/mydata/app/${project.artifactId}/logs:/var/logs</volume>
                                    </bind>
                                </volumes>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>